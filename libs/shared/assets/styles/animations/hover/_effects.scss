@use './hacks' as hacks;
@use './mixins' as mixins;
@use './options' as options;

/* Bounce To Right */
@mixin bounceToRight($backgroundColor, $textColor: var(--text-default-color)) {
  @include hacks.hacks();
  position: relative;
  @include mixins.prefixed(transition-property, color);
  @include mixins.prefixed(transition-duration, options.$slowDuration);

  &:before {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $backgroundColor;
    @include mixins.prefixed(transform, scaleX(0));
    @include mixins.prefixed(transform-origin, 0 50%);
    @include mixins.prefixed(transition-property, transform);
    @include mixins.prefixed(transition-duration, options.$slowDuration);
    @include mixins.prefixed(transition-timing-function, ease-out);
  }

  &:hover,
  &:focus,
  &:active {
    color: $textColor !important;

    &:before {
      @include mixins.prefixed(transform, scaleX(1));
      @include mixins.prefixed(
        transition-timing-function,
        cubic-bezier(0.52, 1.64, 0.37, 0.66)
      );
    }
  }
}

/* Float Shadow */
@mixin floatShadow {
  @include hacks.hacks();
  position: relative;
  @include mixins.prefixed(transition-duration, options.$mediumDuration);
  @include mixins.prefixed(transition-property, transform);

  &:before {
    pointer-events: none;
    position: absolute;
    z-index: -1;
    content: '';
    top: 100%;
    left: 5%;
    height: 10px;
    width: 90%;
    opacity: 0;
    background: radial-gradient(
      ellipse at center,
      rgba(0, 0, 0, 0.35) 0%,
      rgba(0, 0, 0, 0) 80%
    ); /* W3C */
    @include mixins.prefixed(transition-duration, options.$mediumDuration);
    @include mixins.prefixed(transition-property, 'transform, opacity');
  }

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(
      transform,
      translateY(-5px)
    ); /* move the element up by 5px */

    &:before {
      opacity: 1;
      @include mixins.prefixed(
        transform,
        translateY(5px)
      ); /* move the element down by 5px (it will stay in place because it's attached to the element that also moves up 5px) */
    }
  }
}

/* Wobble Top */
@include mixins.keyframes(#{options.$nameSpace}__wobbleTop) {
  16.65% {
    @include mixins.prefixed(transform, skew(-12deg));
  }

  33.3% {
    @include mixins.prefixed(transform, skew(10deg));
  }

  49.95% {
    @include mixins.prefixed(transform, skew(-6deg));
  }

  66.6% {
    @include mixins.prefixed(transform, skew(4deg));
  }

  83.25% {
    @include mixins.prefixed(transform, skew(-2deg));
  }

  100% {
    @include mixins.prefixed(transform, skew(0));
  }
}

@mixin wobbleTop {
  @include hacks.hacks();
  @include mixins.prefixed(transform-origin, 0 100%);

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}__wobbleTop);
    @include mixins.prefixed(animation-duration, 1s);
    @include mixins.prefixed(animation-timing-function, ease-in-out);
    @include mixins.prefixed(animation-iteration-count, 1);
  }
}

/* Grow */
@mixin grow {
  @include hacks.hacks();
  @include mixins.prefixed(transition-duration, options.$mediumDuration);
  @include mixins.prefixed(transition-property, transform);

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(transform, scale(1.1));
  }
}

/* Wobble Skew */
@include mixins.keyframes(#{options.$nameSpace}__wobbleSkew) {
  16.65% {
    @include mixins.prefixed(transform, skew(-12deg));
  }

  33.3% {
    @include mixins.prefixed(transform, skew(10deg));
  }

  49.95% {
    @include mixins.prefixed(transform, skew(-6deg));
  }

  66.6% {
    @include mixins.prefixed(transform, skew(4deg));
  }

  83.25% {
    @include mixins.prefixed(transform, skew(-2deg));
  }

  100% {
    @include mixins.prefixed(transform, skew(0));
  }
}

@mixin wobbleSkew {
  @include hacks.hacks();

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}__wobbleSkew);
    @include mixins.prefixed(animation-duration, 1s);
    @include mixins.prefixed(animation-timing-function, ease-in-out);
    @include mixins.prefixed(animation-iteration-count, 1);
  }
}

/* Wobble Vertical */
@include mixins.keyframes(#{options.$nameSpace}__wobbleVertical) {
  16.65% {
    @include mixins.prefixed(transform, translateY(8px));
  }

  33.3% {
    @include mixins.prefixed(transform, translateY(-6px));
  }

  49.95% {
    @include mixins.prefixed(transform, translateY(4px));
  }

  66.6% {
    @include mixins.prefixed(transform, translateY(-2px));
  }

  83.25% {
    @include mixins.prefixed(transform, translateY(1px));
  }

  100% {
    @include mixins.prefixed(transform, translateY(0));
  }
}

@mixin wobbleVertical {
  @include hacks.hacks();

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(
      animation-name,
      #{options.$nameSpace}__wobbleVertical
    );
    @include mixins.prefixed(animation-duration, 1s);
    @include mixins.prefixed(animation-timing-function, ease-in-out);
    @include mixins.prefixed(animation-iteration-count, 1);
  }
}

/** Rubber Band */
@include mixins.keyframes(#{options.$nameSpace}__rubberBand) {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(0.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, 0.95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@mixin rubberBand {
  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}__rubberBand);
    @include mixins.prefixed(animation-duration, 1s);
  }
}

/** Swing */
@include mixins.keyframes(#{options.$nameSpace}__swing) {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

@mixin swing {
  transform-origin: top center;

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}__swing);
  }
}

/** Headshake */
@include mixins.keyframes(#{options.$nameSpace}__headShake) {
  0% {
    transform: translateX(0);
  }

  6.5% {
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    transform: translateX(0);
  }
}

@mixin headShake {
  animation-timing-function: ease-in-out;

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}__headShake);
  }
}

/* Rotate */
@mixin rotate {
  @include hacks.hacks();
  @include mixins.prefixed(transition-duration, options.$mediumDuration);
  @include mixins.prefixed(transition-property, transform);

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(transform, rotate(4deg));
  }
}

/* Push */
@include mixins.keyframes(#{options.$nameSpace}-push) {
  50% {
    @include mixins.prefixed(transform, scale(0.8));
  }

  100% {
    @include mixins.prefixed(transform, scale(1));
  }
}

@mixin push {
  @include hacks.hacks();

  &:hover,
  &:focus,
  &:active {
    @include mixins.prefixed(animation-name, #{options.$nameSpace}-push);
    @include mixins.prefixed(animation-duration, 0.3s);
    @include mixins.prefixed(animation-timing-function, linear);
    @include mixins.prefixed(animation-iteration-count, 1);
  }
}
