@use 'breakpoints' as *;
@use '../themes/_palettes/base-palette' as base-palette;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media only screen and #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` does not exist";
  }
}

@mixin apply-variables($theme) {
  $colors: map-get($theme, color);
  $primary: map-get($colors, primary);
  $accent: map-get($colors, accent);

  html {
    /* Colors */
    --color-primary: #{map-get($primary, 400)};
    --color-accent: #{map-get($accent, 400)};
    --color-red: #{map-get(base-palette.$red, 400)};
    --color-green: #{map-get(base-palette.$green, 400)};
    --color-gray: #{map-get(base-palette.$gray, 600)};

    // Primary Color: Uses the primary map from Material 3 Config
    --color-primary-50: #{map-get($primary, 50)};
    --color-primary-100: #{map-get($primary, 100)};
    --color-primary-200: #{map-get($primary, 200)};
    --color-primary-300: #{map-get($primary, 300)};
    --color-primary-400: #{map-get($primary, 400)};
    --color-primary-500: #{map-get($primary, 500)};
    --color-primary-600: #{map-get($primary, 600)};
    --color-primary-700: #{map-get($primary, 700)};
    --color-primary-800: #{map-get($primary, 800)};
    --color-primary-900: #{map-get($primary, 900)};

    // Accent Color: Uses the tertiary map from Material 3 Config
    --color-accent-50: #{map-get($accent, 50)};
    --color-accent-100: #{map-get($accent, 100)};
    --color-accent-200: #{map-get($accent, 200)};
    --color-accent-300: #{map-get($accent, 300)};
    --color-accent-400: #{map-get($accent, 400)};
    --color-accent-500: #{map-get($accent, 500)};
    --color-accent-600: #{map-get($accent, 600)};
    --color-accent-700: #{map-get($accent, 700)};
    --color-accent-800: #{map-get($accent, 800)};
    --color-accent-900: #{map-get($accent, 900)};

    --color-gray-50: #{map-get(base-palette.$gray, 50)};
    --color-gray-100: #{map-get(base-palette.$gray, 100)};
    --color-gray-200: #{map-get(base-palette.$gray, 200)};
    --color-gray-300: #{map-get(base-palette.$gray, 300)};
    --color-gray-400: #{map-get(base-palette.$gray, 400)};
    --color-gray-500: #{map-get(base-palette.$gray, 500)};
    --color-gray-600: #{map-get(base-palette.$gray, 600)};
    --color-gray-700: #{map-get(base-palette.$gray, 700)};
    --color-gray-800: #{map-get(base-palette.$gray, 800)};
    --color-gray-900: #{map-get(base-palette.$gray, 900)};

    // Semantic Colors
    --color-red-50: #{map-get(base-palette.$red, 50)};
    --color-red-100: #{map-get(base-palette.$red, 100)};
    --color-red-200: #{map-get(base-palette.$red, 200)};
    --color-red-300: #{map-get(base-palette.$red, 300)};
    --color-red-400: #{map-get(base-palette.$red, 400)};
    --color-red-500: #{map-get(base-palette.$red, 500)};
    --color-red-600: #{map-get(base-palette.$red, 600)};
    --color-red-700: #{map-get(base-palette.$red, 700)};
    --color-red-800: #{map-get(base-palette.$red, 800)};
    --color-red-900: #{map-get(base-palette.$red, 900)};

    --color-green-50: #{map-get(base-palette.$green, 50)};
    --color-green-100: #{map-get(base-palette.$green, 100)};
    --color-green-200: #{map-get(base-palette.$green, 200)};
    --color-green-300: #{map-get(base-palette.$green, 300)};
    --color-green-400: #{map-get(base-palette.$green, 400)};
    --color-green-500: #{map-get(base-palette.$green, 500)};
    --color-green-600: #{map-get(base-palette.$green, 600)};
    --color-green-700: #{map-get(base-palette.$green, 700)};
    --color-green-800: #{map-get(base-palette.$green, 800)};
    --color-green-900: #{map-get(base-palette.$green, 900)};

    /* Z-Indexes
      Note: It is intended that the values below are below 1000 since the Angular Material
      CDK Overlay container has a z-index of 1000. This prevents overriding the CDK Overlay
      whenever  we use these values across different components.
    */
    --z-fixed: 200;
  }
}
